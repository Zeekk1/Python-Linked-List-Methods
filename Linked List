class Node:
    def __init__(self,data):
        self.data = data
        self.ref = None

class LinkedList:
    def __init__(self):
        self.head = None

    def print_LL(self):
        if self.head is None:
            print("Linked list is empty!")
        else:
            n = self.head
            while n is not None:
                print(n.data,"-->",end=" ")
                n = n.ref
    def add_begin(self,data):
        new_node=Node(data)
        new_node.ref=self.head
        self.head=new_node

    def add_middle(self,data,position):
        if self.head is None:
            print("Linked List is empty!")
            return
        if self.head.data==position:
            new_node = Node(data)
            new_node.ref = self.head
            self.head = new_node
        current=self.head
        while current.ref is not None:
            if current.ref.data==position:
                break
            current=current.ref
        if current.ref is None:
            print("Node is not found!")
        else:
            new_node = Node(data)
            new_node.ref = current.ref
            current.ref = new_node

    def add_end(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            current= self.head
            while current.ref is not None:
                current = current.ref
            current.ref = new_node

    def remove_end(self):
        if self.head is None:
            print("Linked List is empty")
            return
        current=self.head
        while current.ref.ref is not None:
            current=current.ref
        current.ref=None

    def remove_begin(self):
        if self.head is None:
            print("Linked List is empty")
            return
        else:
            self.head=self.head.ref
